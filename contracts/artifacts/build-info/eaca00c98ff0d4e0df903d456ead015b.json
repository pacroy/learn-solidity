{
	"id": "eaca00c98ff0d4e0df903d456ead015b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/condition.sol": {
				"content": "pragma solidity ^0.8.14;\n\ncontract Condition {\n    \n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/condition.sol": {
				"Condition": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/condition.sol\":26:53  contract Condition {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/condition.sol\":26:53  contract Condition {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208c752a4fe46c7e88dd9d4e087140ea23465889a97829c859c763c08bff879c6764736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212208c752a4fe46c7e88dd9d4e087140ea23465889a97829c859c763c08bff879c6764736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 PUSH22 0x2A4FE46C7E88DD9D4E087140EA23465889A97829C859 0xC7 PUSH4 0xC08BFF87 SWAP13 PUSH8 0x64736F6C63430008 0xF STOP CALLER ",
							"sourceMap": "26:27:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212208c752a4fe46c7e88dd9d4e087140ea23465889a97829c859c763c08bff879c6764736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 PUSH22 0x2A4FE46C7E88DD9D4E087140EA23465889A97829C859 0xC7 PUSH4 0xC08BFF87 SWAP13 PUSH8 0x64736F6C63430008 0xF STOP CALLER ",
							"sourceMap": "26:27:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 53,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26,
									"end": 53,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26,
									"end": 53,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 53,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 53,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 53,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26,
									"end": 53,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 53,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26,
									"end": 53,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 53,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 53,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26,
									"end": 53,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 53,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26,
									"end": 53,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26,
									"end": 53,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 53,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 53,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 53,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 53,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26,
									"end": 53,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 53,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208c752a4fe46c7e88dd9d4e087140ea23465889a97829c859c763c08bff879c6764736f6c634300080f0033",
									".code": [
										{
											"begin": 26,
											"end": 53,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 53,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 53,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 53,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 53,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 53,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/condition.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/condition.sol\":\"Condition\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/condition.sol\":{\"keccak256\":\"0x7363c625c378307a077d5f3a00b45d6096418a0d70e66ee2313f88043d26093a\",\"urls\":[\"bzz-raw://3ef1bca42c4fae05a2a839a780d3f558625eac8efb5c328b801dfbfa664d8fd9\",\"dweb:/ipfs/QmRYsHJ7tT8Y3E86coFgR9jgMbh6x4DuEBCQ4ScsCcN5LD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/condition.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/condition.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/condition.sol": {
				"ast": {
					"absolutePath": "contracts/condition.sol",
					"exportedSymbols": {
						"Condition": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".14"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Condition",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Condition",
							"nameLocation": "35:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "26:27:0",
							"usedErrors": []
						}
					],
					"src": "0:53:0"
				},
				"id": 0
			}
		}
	}
}