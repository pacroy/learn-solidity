{
	"id": "7050b0f07efdf83768d67b76ed0f28e2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/loop.sol": {
				"content": "pragma solidity ^0.8.14;\n\ncontract Loop {\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/loop.sol": {
				"Loop": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/loop.sol\":26:44  contract Loop {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/loop.sol\":26:44  contract Loop {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202e7036b38a03f390d67bedcb2c626c6a5e1cc487725db51a10dc138a1f37bda464736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212202e7036b38a03f390d67bedcb2c626c6a5e1cc487725db51a10dc138a1f37bda464736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E PUSH17 0x36B38A03F390D67BEDCB2C626C6A5E1CC4 DUP8 PUSH19 0x5DB51A10DC138A1F37BDA464736F6C63430008 0xF STOP CALLER ",
							"sourceMap": "26:18:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212202e7036b38a03f390d67bedcb2c626c6a5e1cc487725db51a10dc138a1f37bda464736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E PUSH17 0x36B38A03F390D67BEDCB2C626C6A5E1CC4 DUP8 PUSH19 0x5DB51A10DC138A1F37BDA464736F6C63430008 0xF STOP CALLER ",
							"sourceMap": "26:18:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 44,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26,
									"end": 44,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26,
									"end": 44,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 44,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 44,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 44,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 44,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 44,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 44,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 44,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202e7036b38a03f390d67bedcb2c626c6a5e1cc487725db51a10dc138a1f37bda464736f6c634300080f0033",
									".code": [
										{
											"begin": 26,
											"end": 44,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 44,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 44,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 44,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 44,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 44,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/loop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/loop.sol\":\"Loop\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/loop.sol\":{\"keccak256\":\"0x8d4bf1970d279cfae94cfb2b3420a66fc912188cab9eaadcf9e2d67fc83431ae\",\"urls\":[\"bzz-raw://85418b3851afd9f4441a01e4644a010b27efaf8f4db35ff927c27329bc84ef3c\",\"dweb:/ipfs/Qma1UrtwJQkSkyEihC3332ArAnUZNhrsoAhiFfPHqdGHom\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/loop.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/loop.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/loop.sol": {
				"ast": {
					"absolutePath": "contracts/loop.sol",
					"exportedSymbols": {
						"Loop": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".14"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Loop",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Loop",
							"nameLocation": "35:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "26:18:0",
							"usedErrors": []
						}
					],
					"src": "0:44:0"
				},
				"id": 0
			}
		}
	}
}