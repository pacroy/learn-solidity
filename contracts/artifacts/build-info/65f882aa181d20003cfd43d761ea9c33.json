{
	"id": "65f882aa181d20003cfd43d761ea9c33",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/loop.sol": {
				"content": "pragma solidity ^0.8.14;\n\ncontract Enum {\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/loop.sol": {
				"Enum": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/loop.sol\":26:44  contract Enum {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/loop.sol\":26:44  contract Enum {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bd78b72269d56d885678ca60e51d8fb4fffb4765804bd7f1dc4a3110a1ad90e064736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220bd78b72269d56d885678ca60e51d8fb4fffb4765804bd7f1dc4a3110a1ad90e064736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD PUSH25 0xB72269D56D885678CA60E51D8FB4FFFB4765804BD7F1DC4A31 LT LOG1 0xAD SWAP1 0xE0 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "26:18:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220bd78b72269d56d885678ca60e51d8fb4fffb4765804bd7f1dc4a3110a1ad90e064736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD PUSH25 0xB72269D56D885678CA60E51D8FB4FFFB4765804BD7F1DC4A31 LT LOG1 0xAD SWAP1 0xE0 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "26:18:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 44,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26,
									"end": 44,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26,
									"end": 44,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 44,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 44,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 44,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 44,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 44,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 44,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26,
									"end": 44,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 44,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bd78b72269d56d885678ca60e51d8fb4fffb4765804bd7f1dc4a3110a1ad90e064736f6c634300080f0033",
									".code": [
										{
											"begin": 26,
											"end": 44,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 44,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 44,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 44,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 44,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 44,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/loop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/loop.sol\":\"Enum\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/loop.sol\":{\"keccak256\":\"0x4def104884359f73fc54440f73e625eab7d0df4e9853d2f0737990a9eeb320fc\",\"urls\":[\"bzz-raw://5c2b60d9820f40c18fe2cb0dd5797c557a1a0814320de69df9eab2c3eacb3d3c\",\"dweb:/ipfs/QmbYZZQCNowGEtgT8Es3BLLXNybpvvs5niC8LjmFuDWtX8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/loop.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/loop.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/loop.sol": {
				"ast": {
					"absolutePath": "contracts/loop.sol",
					"exportedSymbols": {
						"Enum": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".14"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Enum",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Enum",
							"nameLocation": "35:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "26:18:0",
							"usedErrors": []
						}
					],
					"src": "0:44:0"
				},
				"id": 0
			}
		}
	}
}